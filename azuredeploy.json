{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "clusterName": {
            "type": "string",
            "defaultValue": "hditutorial",
            "metadata": {
                "description": "The name of the HDInsight cluster to create."
            }
        },
        "loginUsername": {
            "type": "string",
            "defaultValue": "sparkadmin",
            "metadata": {
                "description": "These credentials can be used to submit jobs to the cluster, log into cluster dashboards, log into Ambari, and SSH into the cluster."
            }
        },
        "loginPassword": {
            "type": "securestring",
            "defaultValue": "Password@123",
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "clusterNodeSize": {
            "type": "string",
            "defaultValue": "Standard_D14",
            "allowedValues": [
                "Standard_D12",
                "Standard_D13",
                "Standard_D14"
            ],
            "metadata": {
                "description": "All nodes will be deployed using the specified hardware profile: D12(4 CPU Cores, 28GB of RAM), D13(8 CPU Cores, 56GB of RAM), D14(16 CPU Cores, 112 GB of RAM)."
            }
        },
        "clusterWorkerNodeCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "The number of worker nodes in the HDInsight cluster."
            }
        },
        "administratorLogin": {
            "type": "string",
            "defaultValue": "sqladmin",
            "metadata": {
                "description": "The admin user of the SQL Server"
            }
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "defaultValue": "Password@123",
            "metadata": {
                "description": "The password of the admin user of the SQL Server"
            }
        },
        "dataWarehouseName": {
            "type": "string",
            "defaultValue": "CentralTutorialDW",
            "metadata": {
                "description": "The name of the new SQL Data Warehouse to create."
            }
        },
        "collation": {
            "type": "string",
            "defaultValue": "SQL_LATIN1_GENERAL_CP1_CI_AS",
            "metadata": {
                "description": "The database collation for governing the proper use of characters."
            }
        },
        "edition": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium",
                "DataWarehouse"
            ],
            "metadata": {
                "description": "The type of database to create."
            }
        },
        "maxSizeBytes": {
            "type": "string",
            "defaultValue": "1073741824",
            "metadata": {
                "description": "The maximum size, in bytes, for the database"
            }
        },
        "requestedServiceObjectiveName": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "S0",
                "S1",
                "S2",
                "P1",
                "P2",
                "P3"
            ],
            "metadata": {
                "description": "Describes the performance level for Edition"
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "PBServerVM"
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_DS11_v2"
        },
        "vmAdminUserName": {
            "type": "string",
            "defaultValue": "pbadmin"
        },
        "vmAdminPassword": {
            "type": "securestring",
            "defaultValue": "Password@123"
        },
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "pbserverdns",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        }
    },
    "variables": {
        "clusterStorageAccountName": "[concat('hybriddw', uniquestring(resourceGroup().id))]",
        "defaultApiVersion": "2015-06-15",
        "clusterApiVersion": "2015-03-01-preview",
        "clusterType": "spark",
        "sqlserverName": "[concat('sqlserver', uniqueString(resourceGroup().id))]",
        "azureSqlLinkedServiceName": "AzureSqlLinkedService",
        "storageLinkedServiceName": "StorageLinkedService",
        "BlobInputTableName": "BlobInputTable",
        "SQLOutputTableName": "SQLOutputTable",
        "PipelineName": "Blob2SQLPipeline",
        "storageAccountName": "[concat('pbvm', uniquestring(resourceGroup().id))]",
        "sizeOfDiskInGB": "1023",
        "nicName": "PBVMNic",
        "addressPrefix": "10.0.0.0/16",
        "subnetName": "Subnet",
        "subnetPrefix": "10.0.0.0/24",
        "storageAccountType": "Standard_LRS",
        "publicIPAddressName": "PBVMPublicIP",
        "publicIPAddressType": "Dynamic",
        "vmStorageAccountContainerName": "vhds",
        "vmName": "SimpleWindowsVM",
        "virtualNetworkName": "PBServerVNET",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'), '/subnets/', variables('subnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('clusterStorageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "name": "[variables('sqlserverName')]",
            "type": "Microsoft.Sql/servers",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "SqlServer"
            },
            "apiVersion": "2014-04-01-preview",
            "properties": {
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "name": "[parameters('dataWarehouseName')]",
                    "type": "databases",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "displayName": "Data Warehouse"
                    },
                    "apiVersion": "2014-04-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('sqlserverName'))]"
                    ],
                    "properties": {
                        "edition": "DataWarehouse",
                        "collation": "[parameters('collation')]",
                        "requestedServiceObjectiveName": "DW400"
                    }
                },
                {
                    "type": "firewallrules",
                    "apiVersion": "2014-04-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('sqlserverName'))]"
                    ],
                    "location": "[resourceGroup().location]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    }
                }
            ]
        },
        {
            "name": "[concat(parameters('clusterName'), uniquestring(resourceGroup().id))]",
            "type": "Microsoft.HDInsight/clusters",
            "location": "[resourceGroup().location]",
            "apiVersion": "[variables('clusterApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/',variables('clusterStorageAccountName'))]"
            ],
            "tags": {},
            "properties": {
                "clusterVersion": "3.4",
                "osType": "Linux",
                "tier": "standard",
                "clusterDefinition": {
                    "kind": "[variables('clusterType')]",
                    "configurations": {
                        "gateway": {
                            "restAuthCredential.isEnabled": true,
                            "restAuthCredential.username": "[parameters('loginUsername')]",
                            "restAuthCredential.password": "[parameters('loginPassword')]"
                        },
                        "core-site": {
                            "fs.defaultFS": "[concat('wasb://', parameters('clusterName'), '@', variables('clusterStorageAccountName'),'.blob.core.windows.net')]",
                            "[concat('fs.azure.account.key.', variables('clusterStorageAccountName'), '.blob.core.windows.net')]": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('clusterStorageAccountName')), '2016-01-01').keys[0].value]"
                        }
                    }
                },
                "computeProfile": {
                    "roles": [
                        {
                            "name": "headnode",
                            "minInstanceCount": 1,
                            "targetInstanceCount": 2,
                            "hardwareProfile": {
                                "vmSize": "[parameters('clusterNodeSize')]"
                            },
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "username": "[concat('ssh', parameters('loginUsername'))]",
                                    "password": "[parameters('loginPassword')]"
                                }
                            },
                            "scriptActions": []
                        },
                        {
                            "name": "workernode",
                            "minInstanceCount": 1,
                            "targetInstanceCount": "[parameters('clusterWorkerNodeCount')]",
                            "hardwareProfile": {
                                "vmSize": "[parameters('clusterNodeSize')]"
                            },
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "username": "[concat('ssh', parameters('loginUsername'))]",
                                    "password": "[parameters('loginPassword')]"
                                }
                            },
                            "scriptActions": []
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('clusterName'), parameters('dnsLabelPrefix'), uniquestring(resourceGroup().id))]"
                }
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-03-30",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "osType": "Windows",
                        "name": "SQLPB-osDisk.5f5b5456-8dd5-4f5b-b171-22eb83aea14d.vhd",
                        "createOption": "FromImage",
                        "image": {
                            "uri": "https://eahdwstorage.blob.core.windows.net/system/Microsoft.Compute/Images/generalized/SQLPB-osDisk.5f5b5456-8dd5-4f5b-b171-22eb83aea14d.vhd"
                        },
                        "vhd": {
                            "uri": "[concat('https://eahdwstorage.blob.core.windows.net/newvmcontainer-', uniquestring(resourceGroup().id), '/osDisk.4766b040-2d46-42f9-87c2-5dfb368a2182.vhd')]"
                        },
                        "caching": "ReadWrite"
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "SQLPB-dataDisk-0.5f5b5456-8dd5-4f5b-b171-22eb83aea14d.vhd",
                            "diskSizeGB": "[variables('sizeOfDiskInGB')]",
                            "createOption": "FromImage",
                            "image": {
                                "uri": "https://eahdwstorage.blob.core.windows.net/system/Microsoft.Compute/Images/generalized/SQLPB-dataDisk-0.5f5b5456-8dd5-4f5b-b171-22eb83aea14d.vhd"
                            },
                            "vhd": {
                                "uri": "[concat('https://eahdwstorage.blob.core.windows.net/newvmcontainer-', uniquestring(resourceGroup().id), '/dataDisk-0.4766b040-2d46-42f9-87c2-5dfb368a2182.vhd')]"
                            },
                            "caching": "ReadWrite"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('vmAdminUsername')]",
                    "adminPassword": "[parameters('vmAdminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', variables('clusterStorageAccountName'), '.blob.core.windows.net/')]"
                    }
                },
                "provisioningState": 0
            },
            "name": "[parameters('vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('clusterStorageAccountName'))]",
            ],
        }
    ],
    "outputs": {
        "HDIClusterName": {
            "value": "[parameters('clusterName')]",
            "type": "string"
        },
        "HDIStorageAccountName": {
            "type": "string",
            "value": "[variables('clusterStorageAccountName')]"
        },
        "HDIStorageAccountKey": {
            "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('clusterStorageAccountName')), '2016-01-01').keys[0].value]",
            "type": "string"
        },
        "SQLServerName": {
            "value": "[variables('sqlserverName')]",
            "type": "string"
        },
        "SQLDataWarehouseName": {
            "value": "[parameters('dataWarehouseName')]",
            "type": "string"
        },
        "PBServerName": {
            "value": "[parameters('vmName')]",
            "type": "string"
        }
    }
}
