{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "hdi-cluster-name": {
            "type": "string",
            "defaultValue": "[concat('dv', '-hdi-cluster-', parameters('unique-id'))]",
            "metadata": {
                "description": "The HDInsight Cluster name to match the same name used during Service Principal Identity creation."
            }
        },
        "username": {
            "type": "string",
            "metadata": {
                "description": "These credentials can be used to submit jobs to the cluster, log into cluster dashboards, log into Ambari, and SSH into the cluster."
            }
        },
        "password": {
            "type": "securestring",
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "unique-id": {
            "type": "string",
            "defaultValue": "[uniqueString(resourceGroup().id)]",
            "metadata": {
                "description": "A globally unique value that will be appended to each resource that is created from this template. The default template expression will generate an appropriate random value."
            }
        },
        "service-principal-objectId": {
            "type": "string",
            "metadata": {
                "description": "The AAD object ID (guid) of the service principal that represents the HDInsight cluster. The service principal will be given permissions on the root folder of the Data Lake Store account."
            }
        },
        "service-principal-applicationId": {
            "type": "string",
            "metadata": {
                "description": "The AAD application ID (guid) of the service principal that represents the HDInsight cluster. The service principal will be given permissions on the root folder of the Data Lake Store account."
            }
        },
        "service-principal-certificate-contents": {
            "type": "securestring",
            "metadata": {
                "description": "The base-64-encoded contents of the PFX certificate file that can be used to authenticate as the service principal that represents the HDInsight cluster."
            }
        },
        "service-principal-certificate-password": {
            "type": "securestring",
            "metadata": {
                "description": "The password securing the PFX certificate file that can be used to authenticate as the service principal that represents the HDInsight cluster."
            }
        },
        "aad-tenantId": {
            "type": "string",
            "metadata": {
                "description": "The tenant ID (guid) of the Azure Active Directory (AAD) tenant where the service principal resides."
            }
        }
    },
    "variables": {
        "default-version": "2015-06-15",
        "hdi-api-version": "2015-03-01-preview",
        "storage-version": "2016-01-01",
        "sqldw-api-version": "2014-04-01-preview",
        "storage-account-type": "Standard_LRS",
        "storage-account": "[concat('dv', 'stor', parameters('unique-id'))]",
        "deploy-location": "[resourceGroup().location]",

        "hdi-cluster-name": "[parameters('hdi-cluster-name')]",
        "hdi-cluster-type": "spark",
        "hdi-cluster-os-type": "Linux",
        "hdi-cluster-tier": "standard",
        "hdi-cluster-version": "3.4",
        "hdi-cluster-node-size": "Standard_D14",
        "hdi-worker-count": "2",
        "sql-server-name": "[concat('sqlserver', parameters('unique-id'))]",
        "sqldw-name": "[concat('dv', '-sqldw-', parameters('unique-id'))]",
        "sql-collation": "SQL_LATIN1_GENERAL_CP1_CI_AS",
        "sql-requested-service": "DW100",

        "adl-store-name": "[concat('dv', 'adls', parameters('unique-id'))]",
        "adls-api-version": "2015-10-01-preview"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storage-account')]",
            "apiVersion": "[variables('storage-version')]",
            "location": "[variables('deploy-location')]",
            "sku": {
                "name": "[variables('storage-account-type')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "name": "[variables('adl-store-name')]",
            "type": "Microsoft.DataLakeStore/accounts",
            "location": "East US 2",
            "apiVersion": "[variables('adls-api-version')]",
            "dependsOn": [],
            "tags": {},
            "properties": {
                "initialUser": "[parameters('service-principal-objectId')]"
            }
        },
        {
            
            "type": "Microsoft.HDInsight/clusters",
            "name": "[variables('hdi-cluster-name')]",
            "location": "[variables('deploy-location')]",
            "apiVersion": "[variables('hdi-api-version')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/',variables('storage-account'))]",
                "[concat('Microsoft.DataLakeStore/accounts/',variables('adl-store-name'))]"
            ],
            "tags": {},
            "properties": {
                "clusterVersion": "[variables('hdi-cluster-version')]",
                "osType": "[variables('hdi-cluster-os-type')]",
                "tier": "[variables('hdi-cluster-tier')]",
                "clusterDefinition": {
                    "kind": "[variables('hdi-cluster-type')]",
                    "configurations": {
                        "gateway": {
                            "restAuthCredential.isEnabled": true,
                            "restAuthCredential.username": "[parameters('username')]",
                            "restAuthCredential.password": "[parameters('password')]"
                        },
                        "clusterIdentity": {
                            "clusterIdentity.applicationId": "[parameters('service-principal-applicationId')]",
                            "clusterIdentity.certificate": "[parameters('service-principal-certificate-contents')]",
                            "clusterIdentity.certificatePassword": "[parameters('service-principal-certificate-password')]",
                            "clusterIdentity.aadTenantId": "[concat('https://login.windows.net/',parameters('aad-tenantId'))]",
                            "clusterIdentity.resourceUri": "https://management.core.windows.net/"
                        },
                        "core-site": {
                            "fs.defaultFS": "[concat('wasb://', variables('hdi-cluster-name'), '@', variables('storage-account'),'.blob.core.windows.net')]",
                            "[concat('fs.azure.account.key.', variables('storage-account'), '.blob.core.windows.net')]": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage-account')), variables('storage-version')).keys[0].value]"
                        }
                    }
                },
                "computeProfile": {
                    "roles": [
                        {
                            "name": "headnode",
                            "minInstanceCount": 1,
                            "targetInstanceCount": 2,
                            "hardwareProfile": {
                                "vmSize": "[variables('hdi-cluster-node-size')]"
                            },
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "username": "[parameters('username')]",
                                    "password": "[parameters('password')]"
                                }
                            },
                            "scriptActions": []
                        },
                        {
                            "name": "workernode",
                            
                            "minInstanceCount": 1,
                            "targetInstanceCount": "[variables('hdi-worker-count')]",
                            "hardwareProfile": {
                                "vmSize": "[variables('hdi-cluster-node-size')]"
                            },
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "username": "[parameters('username')]",
                                    "password": "[parameters('password')]"
                                }
                            },
                            "scriptActions": []
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "name": "[variables('sql-server-name')]",
            "location": "[variables('deploy-location')]",
            "tags": {
                "displayName": "SqlServer"
            },
            "apiVersion": "[variables('sqldw-api-version')]",
            "properties": {
                "administratorLogin": "[parameters('username')]",
                "administratorLoginPassword": "[parameters('password')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "name": "[variables('sqldw-name')]",
                    "type": "databases",
                    "location": "[variables('deploy-location')]",
                    "tags": {
                        "displayName": "Data Warehouse"
                    },
                    "apiVersion": "[variables('sqldw-api-version')]",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('sql-server-name'))]"
                    ],
                    "properties": {
                        "edition": "DataWarehouse",
                        "collation": "[variables('sql-collation')]",
                        "requestedServiceObjectiveName": "[variables('sql-requested-service')]"
                    }
                },
                {
                    "type": "firewallrules",
                    "apiVersion": "[variables('sqldw-api-version')]",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('sql-server-name'))]"
                    ],
                    "location": "[variables('deploy-location')]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    }
                }
            ]
        }
    ],
    "outputs": {
        "HDI Name": {
            "value": "[variables('hdi-cluster-name')]",
            "type": "string"
        },
        "HDI Store": {
            "value": "[variables('storage-account')]",
            "type": "string"
        },
        "SQL Server": {
            "value": "[variables('sql-server-name')]",
            "type": "string"
        },
        "SQL DW": {
            "value": "[variables('sqldw-name')]",
            "type": "string"
        }
    }
}
